{"version":3,"file":"AttributeRow.mjs","sources":["../../../admin/src/components/AttributeRow.tsx"],"sourcesContent":["import { forwardRef, memo, useState } from 'react';\n\nimport { Box, Flex, IconButton, Typography, Link } from '@strapi/design-system';\nimport { ChevronDown, Drag, Lock, Pencil, Trash } from '@strapi/icons';\nimport get from 'lodash/get';\nimport upperFirst from 'lodash/upperFirst';\nimport { useIntl } from 'react-intl';\nimport { Link as NavLink } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { Curve } from '../icons/Curve';\nimport { getAttributeDisplayedType } from '../utils/getAttributeDisplayedType';\nimport { getRelationType } from '../utils/getRelationType';\nimport { getTrad } from '../utils/getTrad';\n\nimport { AttributeIcon } from './AttributeIcon';\nimport { ComponentList } from './ComponentList';\nimport { useDataManager } from './DataManager/useDataManager';\nimport { DisplayedType } from './DisplayedType';\nimport { DynamicZoneList } from './DynamicZoneList';\nimport { useFormModalNavigation } from './FormModalNavigation/useFormModalNavigation';\nimport { StatusBadge } from './Status';\n\nimport type { AnyAttribute, Component, ContentType } from '../types';\nimport type { DraggableAttributes, DraggableSyntheticListeners } from '@dnd-kit/core';\nimport type { UID } from '@strapi/types';\n\nexport const GridWrapper = styled(Flex)<{ $isOverlay?: boolean; $isDragging?: boolean }>`\n  justify-content: space-between;\n\n  border-top: ${({ theme, $isOverlay }) =>\n    $isOverlay ? 'none' : `1px solid ${theme.colors.neutral150}`};\n\n  padding-top: ${({ theme }) => theme.spaces[4]};\n  padding-bottom: ${({ theme }) => theme.spaces[4]};\n\n  opacity: ${({ $isDragging }) => ($isDragging ? 0 : 1)};\n  align-items: center;\n`;\n\nexport type AttributeRowProps = {\n  item: {\n    id: string;\n    index: number;\n  } & AnyAttribute;\n  firstLoopComponentUid?: UID.Component | null;\n  isFromDynamicZone?: boolean;\n  addComponentToDZ?: () => void;\n  secondLoopComponentUid?: UID.Component | null;\n  type: ContentType | Component;\n  isDragging?: boolean;\n  style?: Record<string, unknown>;\n  listeners?: DraggableSyntheticListeners;\n  attributes?: DraggableAttributes;\n  isOverlay?: boolean;\n  handleRef?: (element: HTMLElement | null) => void;\n};\n\nconst StyledAttributeRow = styled(Box)`\n  list-style: none;\n  list-style-type: none;\n`;\n\nexport const AttributeRow = forwardRef<HTMLLIElement, AttributeRowProps>((props, ref) => {\n  const { style, ...rest } = props;\n\n  return (\n    <StyledAttributeRow\n      tag=\"li\"\n      ref={ref}\n      {...props.attributes}\n      style={style}\n      background=\"neutral0\"\n      shadow={props.isOverlay ? 'filterShadow' : 'none'}\n      aria-label={props.item.name}\n    >\n      <MemoizedRow {...rest} />\n    </StyledAttributeRow>\n  );\n});\n\nconst MemoizedRow = memo((props: Omit<AttributeRowProps, 'style'>) => {\n  const {\n    item,\n    firstLoopComponentUid,\n    isFromDynamicZone,\n    addComponentToDZ,\n    secondLoopComponentUid,\n    type,\n    isDragging,\n    isOverlay,\n    handleRef,\n    listeners,\n  } = props;\n  const shouldHideNestedInfos = isOverlay || isDragging;\n\n  const [isOpen, setIsOpen] = useState<boolean>(true);\n\n  const isTypeDeleted = type.status === 'REMOVED';\n\n  const { contentTypes, removeAttribute, isInDevelopmentMode } = useDataManager();\n  const { onOpenModalEditField, onOpenModalEditCustomField } = useFormModalNavigation();\n\n  const { formatMessage } = useIntl();\n\n  const isDeleted = item.status === 'REMOVED';\n\n  const isMorph = item.type === 'relation' && item.relation.includes('morph');\n  const ico = ['integer', 'biginteger', 'float', 'decimal'].includes(item.type)\n    ? 'number'\n    : item.type;\n\n  const targetContentType = item.type === 'relation' ? get(contentTypes, item.target) : null;\n  const isPluginContentType = get(targetContentType, 'plugin');\n\n  const src = 'target' in item && item.target ? 'relation' : ico;\n\n  const handleClick = () => {\n    if (isMorph) {\n      return;\n    }\n\n    if (item.configurable !== false) {\n      const editTargetUid = (secondLoopComponentUid || firstLoopComponentUid || type.uid)!;\n\n      const attributeType = getAttributeDisplayedType(item.type);\n      const step = item.type === 'component' ? '2' : null;\n\n      if (item.customField) {\n        onOpenModalEditCustomField({\n          forTarget: type.modelType,\n          targetUid: editTargetUid,\n          attributeName: item.name,\n          attributeType,\n          customFieldUid: item.customField,\n        });\n      } else {\n        onOpenModalEditField({\n          forTarget: type.modelType,\n          targetUid: editTargetUid,\n          attributeName: item.name,\n          attributeType,\n          step,\n        });\n      }\n    }\n  };\n\n  let loopNumber;\n\n  if (secondLoopComponentUid && firstLoopComponentUid) {\n    loopNumber = 2;\n  } else if (firstLoopComponentUid) {\n    loopNumber = 1;\n  } else {\n    loopNumber = 0;\n  }\n\n  const canEdit = !isTypeDeleted && !isDeleted;\n  const canDelete = !isTypeDeleted && !isDeleted;\n\n  const cursor = isTypeDeleted || isDeleted ? 'not-allowed' : 'move';\n\n  const canClick = isInDevelopmentMode && item.configurable !== false && !isMorph && canEdit;\n\n  return (\n    <>\n      <GridWrapper\n        $isOverlay={isOverlay}\n        $isDragging={isDragging}\n        onClick={canClick ? handleClick : undefined}\n        paddingLeft={4}\n        paddingRight={4}\n      >\n        <Flex alignItems=\"center\" overflow=\"hidden\" gap={2}>\n          {loopNumber !== 0 && !isOverlay && (\n            <Curve color={isFromDynamicZone ? 'primary200' : 'neutral150'} />\n          )}\n          {isInDevelopmentMode && (\n            <IconButton\n              cursor={cursor}\n              role=\"Handle\"\n              ref={handleRef}\n              {...listeners}\n              variant=\"ghost\"\n              withTooltip={false}\n              label={`${formatMessage({\n                id: 'app.utils.drag',\n                defaultMessage: 'Drag',\n              })} ${item.name}`}\n              disabled={isTypeDeleted || isDeleted}\n            >\n              <Drag />\n            </IconButton>\n          )}\n          <Flex gap={4}>\n            <Flex gap={4} alignItems=\"center\">\n              <AttributeIcon type={src} customField={item.customField} />\n              <Typography\n                textColor=\"neutral800\"\n                fontWeight=\"bold\"\n                textDecoration={isDeleted ? 'line-through' : 'none'}\n                ellipsis\n                overflow=\"hidden\"\n              >\n                {item.name}\n                {'required' in item && item.required && (\n                  <Typography textColor=\"danger600\">*&nbsp;</Typography>\n                )}\n              </Typography>\n            </Flex>\n            <Flex>\n              <Typography textColor=\"neutral600\">\n                <DisplayedType\n                  type={item.type}\n                  customField={item.customField}\n                  repeatable={'repeatable' in item && item.repeatable}\n                  multiple={'multiple' in item && item.multiple}\n                />\n                {item.type === 'relation' && (\n                  <>\n                    &nbsp;({getRelationType(item.relation, item.targetAttribute)})&nbsp;\n                    {targetContentType &&\n                      formatMessage({\n                        id: getTrad('modelPage.attribute.with'),\n                        defaultMessage: 'with',\n                      })}\n                    &nbsp;\n                    {targetContentType && (\n                      <Link\n                        onClick={(e) => e.stopPropagation()}\n                        tag={NavLink}\n                        to={`/plugins/content-type-builder/content-types/${targetContentType.uid}`}\n                      >\n                        {upperFirst(targetContentType.info.displayName)}\n                      </Link>\n                    )}\n                    {isPluginContentType &&\n                      `(${formatMessage({\n                        id: getTrad(`from`),\n                        defaultMessage: 'from',\n                      })}: ${isPluginContentType})`}\n                  </>\n                )}\n                {item.type === 'component' && <ComponentLink uid={item.component} />}\n              </Typography>\n            </Flex>\n          </Flex>\n        </Flex>\n\n        <Box>\n          <Flex justifyContent=\"flex-end\" gap={1} onClick={(e) => e.stopPropagation()}>\n            <>\n              <Box>{item.status && <StatusBadge status={item.status} />}</Box>\n              {['component', 'dynamiczone'].includes(item.type) && (\n                <IconButton\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    if (isOpen) {\n                      setIsOpen(false);\n                    } else {\n                      setIsOpen(true);\n                    }\n                  }}\n                  aria-expanded={isOpen}\n                  label={formatMessage({\n                    id: 'app.utils.toggle',\n                    defaultMessage: 'Toggle',\n                  })}\n                  variant=\"ghost\"\n                  withTooltip={false}\n                >\n                  <ChevronDown\n                    aria-hidden\n                    fill=\"neutral500\"\n                    style={{\n                      transform: `rotate(${isOpen ? '0deg' : '-90deg'})`,\n                      transition: 'transform 0.5s',\n                    }}\n                  />\n                </IconButton>\n              )}\n              {isInDevelopmentMode && item.configurable !== false ? (\n                <>\n                  {!isMorph && (\n                    <IconButton\n                      onClick={handleClick}\n                      label={`${formatMessage({\n                        id: 'app.utils.edit',\n                        defaultMessage: 'Edit',\n                      })} ${item.name}`}\n                      variant=\"ghost\"\n                      disabled={!canEdit}\n                    >\n                      <Pencil />\n                    </IconButton>\n                  )}\n                  <IconButton\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      removeAttribute({\n                        forTarget: type.modelType,\n                        targetUid: type.uid,\n                        attributeToRemoveName: item.name,\n                      });\n                    }}\n                    label={`${formatMessage({\n                      id: 'global.delete',\n                      defaultMessage: 'Delete',\n                    })} ${item.name}`}\n                    variant=\"ghost\"\n                    disabled={!canDelete}\n                  >\n                    <Trash />\n                  </IconButton>\n                </>\n              ) : (\n                <Flex padding={2}>\n                  <Lock fill=\"neutral500\" />\n                </Flex>\n              )}\n            </>\n          </Flex>\n        </Box>\n      </GridWrapper>\n\n      <SubRow $shouldHideNestedInfos={shouldHideNestedInfos} $isOpen={isOpen}>\n        {item.type === 'component' && (\n          <ComponentList\n            {...item}\n            isFromDynamicZone={isFromDynamicZone}\n            firstLoopComponentUid={firstLoopComponentUid}\n          />\n        )}\n\n        {item.type === 'dynamiczone' && (\n          <DynamicZoneList\n            {...item}\n            disabled={isTypeDeleted || item.status === 'REMOVED'}\n            addComponent={addComponentToDZ!}\n            forTarget={type.modelType}\n            targetUid={type.uid}\n          />\n        )}\n      </SubRow>\n    </>\n  );\n});\n\nconst SubRow = styled(Box)<{ $isOpen: boolean; $shouldHideNestedInfos?: boolean }>`\n  display: ${({ $shouldHideNestedInfos }) => ($shouldHideNestedInfos ? 'none' : 'block')};\n  max-height: ${({ $isOpen }) => ($isOpen ? '9999px' : '0px')};\n  overflow: hidden;\n\n  transition: ${({ $isOpen }) =>\n    $isOpen ? 'max-height 1s ease-in-out' : 'max-height 0.5s cubic-bezier(0, 1, 0, 1)'};\n`;\n\nconst ComponentLink = ({ uid }: { uid: UID.Component }) => {\n  const { components } = useDataManager();\n  const type = get(components, uid);\n\n  return (\n    <>\n      &nbsp;(\n      <Link\n        onClick={(e) => e.stopPropagation()}\n        tag={NavLink}\n        to={`/plugins/content-type-builder/component-categories/${type.category}/${type.uid}`}\n      >\n        {upperFirst(type.info.displayName)}\n      </Link>\n      )\n    </>\n  );\n};\n"],"names":["GridWrapper","styled","Flex","theme","$isOverlay","colors","neutral150","spaces","$isDragging","StyledAttributeRow","Box","AttributeRow","forwardRef","props","ref","style","rest","_jsx","tag","attributes","background","shadow","isOverlay","aria-label","item","name","MemoizedRow","memo","firstLoopComponentUid","isFromDynamicZone","addComponentToDZ","secondLoopComponentUid","type","isDragging","handleRef","listeners","shouldHideNestedInfos","isOpen","setIsOpen","useState","isTypeDeleted","status","contentTypes","removeAttribute","isInDevelopmentMode","useDataManager","onOpenModalEditField","onOpenModalEditCustomField","useFormModalNavigation","formatMessage","useIntl","isDeleted","isMorph","relation","includes","ico","targetContentType","get","target","isPluginContentType","src","handleClick","configurable","editTargetUid","uid","attributeType","getAttributeDisplayedType","step","customField","forTarget","modelType","targetUid","attributeName","customFieldUid","loopNumber","canEdit","canDelete","cursor","canClick","_jsxs","_Fragment","onClick","undefined","paddingLeft","paddingRight","alignItems","overflow","gap","Curve","color","IconButton","role","variant","withTooltip","label","id","defaultMessage","disabled","Drag","AttributeIcon","Typography","textColor","fontWeight","textDecoration","ellipsis","required","DisplayedType","repeatable","multiple","getRelationType","targetAttribute","getTrad","Link","e","stopPropagation","NavLink","to","upperFirst","info","displayName","ComponentLink","component","justifyContent","StatusBadge","preventDefault","aria-expanded","ChevronDown","aria-hidden","fill","transform","transition","Pencil","attributeToRemoveName","Trash","padding","Lock","SubRow","$shouldHideNestedInfos","$isOpen","ComponentList","DynamicZoneList","addComponent","components","category"],"mappings":"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"}