{"version":3,"file":"aliases-CShKl5-s.js","sources":["../../src/node/core/monorepo.ts","../../src/node/core/config.ts","../../src/node/core/aliases.ts"],"sourcesContent":["import path from 'path';\nimport readPkgUp from 'read-pkg-up';\n\ninterface StrapiMonorepo {\n  path: string;\n}\n\n/**\n * Load information about the strapi CMS monorepo (if applicable)\n *\n * @internal\n */\nasync function loadStrapiMonorepo(cwd: string): Promise<StrapiMonorepo | undefined> {\n  let p = cwd;\n\n  while (p !== '/') {\n    const readResult = await readPkgUp({ cwd: p });\n\n    if (!readResult) {\n      return undefined;\n    }\n\n    if (readResult.packageJson.isStrapiMonorepo) {\n      return { path: path.dirname(readResult.path) };\n    }\n\n    p = path.dirname(path.dirname(readResult.path));\n  }\n\n  return undefined;\n}\n\nexport { loadStrapiMonorepo };\nexport type { StrapiMonorepo };\n","import path from 'node:path';\n\nimport type { BuildContext } from '../create-build-context';\nimport { loadFile } from './files';\n\nconst getUserConfig = async <TConfig>(\n  fileNames: string[],\n  ctx: BuildContext\n): Promise<TConfig | undefined> => {\n  for (const file of fileNames) {\n    const filePath = path.join(ctx.appDir, 'src', 'admin', file);\n    const configFile = await loadFile(filePath);\n\n    if (configFile) {\n      return configFile;\n    }\n  }\n\n  return undefined;\n};\n\nexport { getUserConfig };\n","import path from 'node:path';\nimport { StrapiMonorepo } from './monorepo';\n\n/**\n * The path mappings/aliases used by various tools in the monorepo to map imported modules to\n * source files in order to speed up rebuilding and avoid having a separate watcher process to build\n * from `src` to `lib`.\n *\n * This file is currently read by:\n * - Webpack when running the dev server (only when running in this monorepo)\n */\nconst devAliases: Record<string, string> = {\n  '@strapi/admin/strapi-admin': './packages/core/admin/admin/src',\n  '@strapi/content-releases/strapi-admin': './packages/core/content-releases/admin/src',\n  '@strapi/content-manager/strapi-admin': './packages/core/content-manager/admin/src',\n  '@strapi/content-type-builder/strapi-admin': './packages/core/content-type-builder/admin/src',\n  '@strapi/email/strapi-admin': './packages/core/email/admin/src',\n  '@strapi/upload/strapi-admin': './packages/core/upload/admin/src',\n  '@strapi/plugin-cloud/strapi-admin': './packages/plugins/cloud/admin/src',\n  '@strapi/plugin-color-picker/strapi-admin': './packages/plugins/color-picker/admin/src',\n  '@strapi/plugin-documentation/strapi-admin': './packages/plugins/documentation/admin/src',\n  '@strapi/plugin-graphql/strapi-admin': './packages/plugins/graphql/admin/src',\n  '@strapi/i18n/strapi-admin': './packages/plugins/i18n/admin/src',\n  '@strapi/plugin-sentry/strapi-admin': './packages/plugins/sentry/admin/src',\n  '@strapi/plugin-users-permissions/strapi-admin': './packages/plugins/users-permissions/admin/src',\n  '@strapi/review-workflows/strapi-admin': './packages/core/review-workflows/admin/src',\n};\n\nconst getMonorepoAliases = ({ monorepo }: { monorepo?: StrapiMonorepo }) => {\n  if (!monorepo?.path) {\n    return {};\n  }\n\n  return Object.fromEntries(\n    Object.entries(devAliases).map(([key, modulePath]) => {\n      return [key, path.join(monorepo.path, modulePath)];\n    })\n  );\n};\n\nexport { getMonorepoAliases };\n"],"names":["loadStrapiMonorepo","cwd","p","readResult","readPkgUp","undefined","packageJson","isStrapiMonorepo","path","dirname","getUserConfig","fileNames","ctx","file","filePath","join","appDir","configFile","loadFile","devAliases","getMonorepoAliases","monorepo","Object","fromEntries","entries","map","key","modulePath"],"mappings":";;;;;;;AAOA;;;;IAKA,eAAeA,mBAAmBC,GAAW,EAAA;AAC3C,IAAA,IAAIC,CAAID,GAAAA,GAAAA;AAER,IAAA,MAAOC,MAAM,GAAK,CAAA;QAChB,MAAMC,UAAAA,GAAa,MAAMC,SAAU,CAAA;YAAEH,GAAKC,EAAAA;AAAE,SAAA,CAAA;AAE5C,QAAA,IAAI,CAACC,UAAY,EAAA;YACf,OAAOE,SAAAA;AACT;AAEA,QAAA,IAAIF,UAAWG,CAAAA,WAAW,CAACC,gBAAgB,EAAE;YAC3C,OAAO;AAAEC,gBAAAA,IAAAA,EAAMA,IAAKC,CAAAA,OAAO,CAACN,UAAAA,CAAWK,IAAI;AAAE,aAAA;AAC/C;AAEAN,QAAAA,CAAAA,GAAIM,KAAKC,OAAO,CAACD,KAAKC,OAAO,CAACN,WAAWK,IAAI,CAAA,CAAA;AAC/C;IAEA,OAAOH,SAAAA;AACT;;ACzBMK,MAAAA,aAAAA,GAAgB,OACpBC,SACAC,EAAAA,GAAAA,GAAAA;IAEA,KAAK,MAAMC,QAAQF,SAAW,CAAA;QAC5B,MAAMG,QAAAA,GAAWN,OAAKO,IAAI,CAACH,IAAII,MAAM,EAAE,OAAO,OAASH,EAAAA,IAAAA,CAAAA;QACvD,MAAMI,UAAAA,GAAa,MAAMC,YAASJ,CAAAA,QAAAA,CAAAA;AAElC,QAAA,IAAIG,UAAY,EAAA;YACd,OAAOA,UAAAA;AACT;AACF;IAEA,OAAOZ,SAAAA;AACT;;AChBA;;;;;;;AAOC,IACD,MAAMc,UAAqC,GAAA;IACzC,4BAA8B,EAAA,iCAAA;IAC9B,uCAAyC,EAAA,4CAAA;IACzC,sCAAwC,EAAA,2CAAA;IACxC,2CAA6C,EAAA,gDAAA;IAC7C,4BAA8B,EAAA,iCAAA;IAC9B,6BAA+B,EAAA,kCAAA;IAC/B,mCAAqC,EAAA,oCAAA;IACrC,0CAA4C,EAAA,2CAAA;IAC5C,2CAA6C,EAAA,4CAAA;IAC7C,qCAAuC,EAAA,sCAAA;IACvC,2BAA6B,EAAA,mCAAA;IAC7B,oCAAsC,EAAA,qCAAA;IACtC,+CAAiD,EAAA,gDAAA;IACjD,uCAAyC,EAAA;AAC3C,CAAA;AAEA,MAAMC,kBAAqB,GAAA,CAAC,EAAEC,QAAQ,EAAiC,GAAA;IACrE,IAAI,CAACA,UAAUb,IAAM,EAAA;AACnB,QAAA,OAAO,EAAC;AACV;AAEA,IAAA,OAAOc,MAAOC,CAAAA,WAAW,CACvBD,MAAAA,CAAOE,OAAO,CAACL,UAAYM,CAAAA,CAAAA,GAAG,CAAC,CAAC,CAACC,GAAAA,EAAKC,UAAW,CAAA,GAAA;QAC/C,OAAO;AAACD,YAAAA,GAAAA;AAAKlB,YAAAA,MAAAA,CAAKO,IAAI,CAACM,QAASb,CAAAA,IAAI,EAAEmB,UAAAA;AAAY,SAAA;AACpD,KAAA,CAAA,CAAA;AAEJ;;;;;;"}