{"version":3,"file":"Layout-CsShRydy.mjs","sources":["../../../admin/src/routes/settings/hooks/useReviewWorkflows.ts","../../../admin/src/routes/settings/constants.ts","../../../admin/src/routes/settings/components/StageDragPreview.tsx","../../../admin/src/routes/settings/components/Layout.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { useAPIErrorHandler, useNotification } from '@strapi/admin/strapi-admin';\nimport { type MessageDescriptor, useIntl } from 'react-intl';\n\nimport {\n  GetWorkflowsParams,\n  useCreateWorkflowMutation,\n  useDeleteWorkflowMutation,\n  useGetWorkflowsQuery,\n  useUpdateWorkflowMutation,\n} from '../../../services/settings';\n\nimport type { Create, Update } from '../../../../../shared/contracts/review-workflows';\n\nconst DEFAULT_UNEXPECTED_ERROR_MSG = {\n  id: 'notification.error',\n  defaultMessage: 'An error occurred, please try again',\n} satisfies MessageDescriptor;\n\ntype UseReviewWorkflowsArgs = GetWorkflowsParams & {\n  skip?: boolean;\n};\n\nconst useReviewWorkflows = (params: UseReviewWorkflowsArgs = {}) => {\n  const { toggleNotification } = useNotification();\n  const { formatMessage } = useIntl();\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\n\n  const { skip = false, ...queryParams } = params;\n\n  const { data, isLoading, error } = useGetWorkflowsQuery(\n    {\n      populate: ['stages', 'stageRequiredToPublish'],\n      ...queryParams,\n    },\n    {\n      skip,\n    }\n  );\n\n  React.useEffect(() => {\n    if (error) {\n      toggleNotification({\n        type: 'danger',\n        message: formatAPIError(error),\n      });\n    }\n  }, [error, formatAPIError, toggleNotification]);\n\n  const [createWorkflow] = useCreateWorkflowMutation();\n  const create = React.useCallback(\n    async (data: Create.Request['body']['data']) => {\n      try {\n        const res = await createWorkflow({ data });\n\n        if ('error' in res) {\n          toggleNotification({\n            type: 'danger',\n            message: formatAPIError(res.error),\n          });\n\n          return res;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'actions.created', defaultMessage: 'Created workflow' }),\n        });\n\n        return res;\n      } catch (err) {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage(DEFAULT_UNEXPECTED_ERROR_MSG),\n        });\n\n        throw err;\n      }\n    },\n    [createWorkflow, formatAPIError, formatMessage, toggleNotification]\n  );\n\n  const [updateWorkflow] = useUpdateWorkflowMutation();\n  const update = React.useCallback(\n    async (id: string, data: Update.Request['body']['data']) => {\n      try {\n        const res = await updateWorkflow({ id, data });\n\n        if ('error' in res) {\n          toggleNotification({\n            type: 'danger',\n            message: formatAPIError(res.error),\n          });\n\n          return res;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'actions.updated', defaultMessage: 'Updated workflow' }),\n        });\n\n        return res;\n      } catch (err) {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage(DEFAULT_UNEXPECTED_ERROR_MSG),\n        });\n\n        throw err;\n      }\n    },\n    [formatAPIError, formatMessage, toggleNotification, updateWorkflow]\n  );\n\n  const [deleteWorkflow] = useDeleteWorkflowMutation();\n  const deleteAction = React.useCallback(\n    async (id: string) => {\n      try {\n        const res = await deleteWorkflow({ id });\n\n        if ('error' in res) {\n          toggleNotification({\n            type: 'danger',\n            message: formatAPIError(res.error),\n          });\n\n          return;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'actions.deleted', defaultMessage: 'Deleted workflow' }),\n        });\n\n        return res.data;\n      } catch (err) {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage(DEFAULT_UNEXPECTED_ERROR_MSG),\n        });\n\n        throw err;\n      }\n    },\n    [deleteWorkflow, formatAPIError, formatMessage, toggleNotification]\n  );\n\n  const { workflows = [], meta } = data ?? {};\n\n  return {\n    // meta contains e.g. the total of all workflows. we can not use\n    // the pagination object here, because the list is not paginated.\n    meta,\n    workflows,\n    isLoading,\n    error,\n    create,\n    delete: deleteAction,\n    update,\n  };\n};\n\nexport { useReviewWorkflows };\n","export type DragDropTypes = 'stage';\n\nexport const DRAG_DROP_TYPES: Record<Uppercase<DragDropTypes>, DragDropTypes> = {\n  STAGE: 'stage',\n};\n","import { Flex, Typography } from '@strapi/design-system';\nimport { CaretDown } from '@strapi/icons';\n\ninterface StageDragPreviewType {\n  name: string | null;\n}\n\nconst StageDragPreview = ({ name }: StageDragPreviewType) => {\n  return (\n    <Flex\n      background=\"primary100\"\n      borderStyle=\"dashed\"\n      borderColor=\"primary600\"\n      borderWidth=\"1px\"\n      gap={3}\n      hasRadius\n      padding={3}\n      shadow=\"tableShadow\"\n      width=\"30rem\"\n    >\n      <Flex\n        alignItems=\"center\"\n        background=\"neutral200\"\n        borderRadius=\"50%\"\n        height={6}\n        justifyContent=\"center\"\n        width={6}\n      >\n        <CaretDown width=\"0.8rem\" fill=\"neutral600\" />\n      </Flex>\n\n      <Typography fontWeight=\"bold\">{name}</Typography>\n    </Flex>\n  );\n};\n\nexport { StageDragPreview };\nexport type { StageDragPreviewType };\n","import * as React from 'react';\n\nimport { Page, Layouts } from '@strapi/admin/strapi-admin';\nimport { Box } from '@strapi/design-system';\nimport { XYCoord, useDragLayer } from 'react-dnd';\nimport { useIntl } from 'react-intl';\n\nimport { DRAG_DROP_TYPES } from '../constants';\n\nimport { StageDragPreview } from './StageDragPreview';\n\nfunction getStyle(\n  initialOffset: XYCoord | null,\n  currentOffset: XYCoord | null,\n  mouseOffset: XYCoord | null\n) {\n  if (!initialOffset || !currentOffset || !mouseOffset) {\n    return { display: 'none' };\n  }\n\n  const { x, y } = mouseOffset;\n\n  return {\n    transform: `translate(${x}px, ${y}px)`,\n  };\n}\n\nconst DragLayerRendered = () => {\n  const { itemType, isDragging, item, initialOffset, currentOffset, mouseOffset } = useDragLayer(\n    (monitor) => ({\n      item: monitor.getItem(),\n      itemType: monitor.getItemType(),\n      initialOffset: monitor.getInitialSourceClientOffset(),\n      currentOffset: monitor.getSourceClientOffset(),\n      isDragging: monitor.isDragging(),\n      mouseOffset: monitor.getClientOffset(),\n    })\n  );\n\n  if (!isDragging || itemType !== DRAG_DROP_TYPES.STAGE) {\n    return null;\n  }\n\n  return (\n    <Box\n      height=\"100%\"\n      left={0}\n      position=\"fixed\"\n      pointerEvents=\"none\"\n      top={0}\n      zIndex={100}\n      width=\"100%\"\n    >\n      <Box style={getStyle(initialOffset, currentOffset, mouseOffset)}>\n        <StageDragPreview name={typeof item.item === 'string' ? item.item : null} />;\n      </Box>\n    </Box>\n  );\n};\n\nconst Root: React.FC<React.PropsWithChildren> = ({ children }) => {\n  return (\n    <Page.Main>\n      <Layouts.Content>{children}</Layouts.Content>\n    </Page.Main>\n  );\n};\n\ninterface HeaderProps {\n  title: string;\n  navigationAction?: React.ReactNode;\n  primaryAction?: React.ReactNode;\n  secondaryAction?: React.ReactNode;\n  subtitle?: React.ReactNode;\n}\n\nconst Header: React.FC<HeaderProps> = ({ title, subtitle, navigationAction, primaryAction }) => {\n  const { formatMessage } = useIntl();\n  return (\n    <>\n      <Page.Title>\n        {formatMessage(\n          { id: 'Settings.PageTitle', defaultMessage: 'Settings - {name}' },\n          {\n            name: title,\n          }\n        )}\n      </Page.Title>\n      <Layouts.BaseHeader\n        navigationAction={navigationAction}\n        primaryAction={primaryAction}\n        title={title}\n        subtitle={subtitle}\n      />\n    </>\n  );\n};\n\nexport { DragLayerRendered, Header, Root };\n"],"names":["DEFAULT_UNEXPECTED_ERROR_MSG","id","defaultMessage","useReviewWorkflows","params","toggleNotification","useNotification","formatMessage","useIntl","_unstableFormatAPIError","formatAPIError","useAPIErrorHandler","skip","queryParams","data","isLoading","error","useGetWorkflowsQuery","populate","React","useEffect","type","message","createWorkflow","useCreateWorkflowMutation","create","useCallback","res","err","updateWorkflow","useUpdateWorkflowMutation","update","deleteWorkflow","useDeleteWorkflowMutation","deleteAction","workflows","meta","delete","DRAG_DROP_TYPES","STAGE","StageDragPreview","name","_jsxs","Flex","background","borderStyle","borderColor","borderWidth","gap","hasRadius","padding","shadow","width","_jsx","alignItems","borderRadius","height","justifyContent","CaretDown","fill","Typography","fontWeight","getStyle","initialOffset","currentOffset","mouseOffset","display","x","y","transform","DragLayerRendered","itemType","isDragging","item","useDragLayer","monitor","getItem","getItemType","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","Box","left","position","pointerEvents","top","zIndex","style","Root","children","Page","Main","Layouts","Content","Header","title","subtitle","navigationAction","primaryAction","_Fragment","Title","BaseHeader"],"mappings":"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"}