{"version":3,"file":"server-B-SYspSN.js","sources":["../../src/cli/commands/plugin/init/files/server.ts"],"sourcesContent":["import { outdent } from 'outdent';\n\nimport type { TemplateFile } from '@strapi/pack-up';\n\nconst TYPESCRIPT = (pluginName: string): TemplateFile[] => [\n  {\n    name: 'server/src/index.ts',\n    contents: outdent`\n    /**\n     * Application methods\n     */\n    import bootstrap from './bootstrap';\n    import destroy from './destroy';\n    import register from './register';\n\n    /**\n     * Plugin server methods\n     */\n    import config from './config';\n    import contentTypes from './content-types';\n    import controllers from './controllers';\n    import middlewares from './middlewares';\n    import policies from './policies';\n    import routes from './routes';\n    import services from './services';\n\n    export default {\n      register,\n      bootstrap,\n      destroy,\n      config,\n      controllers,\n      routes,\n      services,\n      contentTypes,\n      policies,\n      middlewares,\n    };\n    `,\n  },\n  {\n    name: 'server/src/bootstrap.ts',\n    contents: outdent`\n    import type { Core } from '@strapi/strapi';\n\n    const bootstrap = ({ strapi }: { strapi: Core.Strapi }) => {\n      // bootstrap phase\n    };\n\n    export default bootstrap;\n    `,\n  },\n  {\n    name: 'server/src/destroy.ts',\n    contents: outdent`\n    import type { Core } from '@strapi/strapi';\n\n    const destroy = ({ strapi }: { strapi: Core.Strapi }) => {\n      // destroy phase\n    };\n\n    export default destroy;\n    `,\n  },\n  {\n    name: 'server/src/register.ts',\n    contents: outdent`\n    import type { Core } from '@strapi/strapi';\n\n    const register = ({ strapi }: { strapi: Core.Strapi }) => {\n      // register phase\n    };\n\n    export default register;\n    `,\n  },\n  {\n    name: 'server/src/config/index.ts',\n    contents: outdent`\n      export default {\n        default: {},\n        validator() {},\n      };\n    `,\n  },\n  {\n    name: 'server/src/content-types/index.ts',\n    contents: outdent`\n    export default {};\n    `,\n  },\n  {\n    name: 'server/src/controllers/index.ts',\n    contents: outdent`\n    import controller from './controller';\n\n    export default {\n      controller,\n    };\n    `,\n  },\n  {\n    name: 'server/src/controllers/controller.ts',\n    contents: outdent`\n    import type { Core } from '@strapi/strapi';\n\n    const controller = ({ strapi }: { strapi: Core.Strapi }) => ({\n      index(ctx) {\n        ctx.body = strapi\n          .plugin('${pluginName}')\n          // the name of the service file & the method.\n          .service('service')\n          .getWelcomeMessage();\n      },\n    });\n\n    export default controller\n    `,\n  },\n  {\n    name: 'server/src/middlewares/index.ts',\n    contents: outdent`\n    export default {};\n    `,\n  },\n  {\n    name: 'server/src/policies/index.ts',\n    contents: outdent`\n    export default {};\n    `,\n  },\n  {\n    name: 'server/src/routes/content-api.ts',\n    contents: outdent`\n    export default [\n        {\n          method: 'GET',\n          path: '/',\n          // name of the controller file & the method.\n          handler: 'controller.index',\n          config: {\n            policies: [],\n          },\n        },\n      ];\n    `,\n  },\n  {\n    name: 'server/src/routes/index.ts',\n    contents: outdent`\n    import contentAPIRoutes from './content-api';\n\n    const routes = {\n      'content-api': {\n        type: 'content-api',\n        routes: contentAPIRoutes,\n      },\n    };\n\n    export default routes;\n    `,\n  },\n  {\n    name: 'server/src/services/index.ts',\n    contents: outdent`\n    import service from './service';\n\n    export default {\n      service,\n    };\n    `,\n  },\n  {\n    name: 'server/src/services/service.ts',\n    contents: outdent`\n    import type { Core } from '@strapi/strapi';\n\n    const service = ({ strapi }: { strapi: Core.Strapi }) => ({\n        getWelcomeMessage() {\n            return 'Welcome to Strapi ðŸš€';\n        },\n    });\n\n    export default service\n    `,\n  },\n];\n\nconst JAVASCRIPT = (pluginName: string): TemplateFile[] => [\n  {\n    name: 'server/src/index.js',\n    contents: outdent`\n        /**\n         * Application methods\n         */\n        import bootstrap from './bootstrap';\n        import destroy from './destroy';\n        import register from './register';\n\n        /**\n         * Plugin server methods\n         */\n        import config from './config';\n        import contentTypes from './content-types';\n        import controllers from './controllers';\n        import middlewares from './middlewares';\n        import policies from './policies';\n        import routes from './routes';\n        import services from './services';\n\n        export default {\n            bootstrap,\n            destroy,\n            register,\n\n            config,\n            controllers,\n            contentTypes,\n            middlewares,\n            policies,\n            routes,\n            services,\n        };\n        `,\n  },\n  {\n    name: 'server/src/bootstrap.js',\n    contents: outdent`\n        const bootstrap = ({ strapi }) => {\n          // bootstrap phase\n        };\n\n        export default bootstrap;\n        `,\n  },\n  {\n    name: 'server/src/destroy.js',\n    contents: outdent`\n        const destroy = ({ strapi }) => {\n          // destroy phase\n        };\n\n        export default destroy;\n        `,\n  },\n  {\n    name: 'server/src/register.js',\n    contents: outdent`\n        const register = ({ strapi }) => {\n          // register phase\n        };\n\n        export default register;\n        `,\n  },\n  {\n    name: 'server/src/config/index.js',\n    contents: outdent`\n      export default {\n        default: {},\n        validator() {},\n      };\n    `,\n  },\n  {\n    name: 'server/src/content-types/index.js',\n    contents: outdent`\n    export default {};\n    `,\n  },\n  {\n    name: 'server/src/controllers/index.js',\n    contents: outdent`\n    import controller from './controller';\n\n    export default {\n        controller,\n    };\n    `,\n  },\n  {\n    name: 'server/src/controllers/controller.js',\n    contents: outdent`\n    const controller = ({ strapi }) => ({\n      index(ctx) {\n        ctx.body = strapi\n          .plugin('${pluginName}')\n          // the name of the service file & the method.\n          .service('service')\n          .getWelcomeMessage();\n      },\n    });\n\n    export default controller\n    `,\n  },\n  {\n    name: 'server/src/middlewares/index.js',\n    contents: outdent`\n    export default {};\n    `,\n  },\n  {\n    name: 'server/src/policies/index.js',\n    contents: outdent`\n    export default {};\n    `,\n  },\n  {\n    name: 'server/src/routes/content-api.js',\n    contents: outdent`\n    export default [\n        {\n          method: 'GET',\n          path: '/',\n          // name of the controller file & the method.\n          handler: 'controller.index',\n          config: {\n            policies: [],\n          },\n        },\n      ];\n    `,\n  },\n  {\n    name: 'server/src/routes/index.js',\n    contents: outdent`\n    import contentAPIRoutes from './content-api';\n\n    const routes = {\n      'content-api': {\n        type: 'content-api',\n        routes: contentAPIRoutes,\n      },\n    };\n\n    export default routes;\n    `,\n  },\n  {\n    name: 'server/src/services/index.js',\n    contents: outdent`\n    import service from './service';\n\n    export default {\n        service,\n    };\n    `,\n  },\n  {\n    name: 'server/src/services/service.js',\n    contents: outdent`\n    const service = ({ strapi }) => ({\n        getWelcomeMessage() {\n            return 'Welcome to Strapi ðŸš€';\n        },\n    });\n\n    export default service\n    `,\n  },\n];\n\nexport { TYPESCRIPT as serverTypescriptFiles, JAVASCRIPT as serverJavascriptFiles };\n"],"names":["outdent"],"mappings":"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"}