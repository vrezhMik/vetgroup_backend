{"version":3,"file":"SelectRoles-9_I7657J.mjs","sources":["../../../admin/src/pages/Settings/pages/Users/components/MagicLinkWrapper.tsx","../../../admin/src/pages/Settings/pages/Users/components/MagicLinkCE.tsx","../../../admin/src/pages/Settings/pages/Users/components/SelectRoles.tsx"],"sourcesContent":["import { IconButton } from '@strapi/design-system';\nimport { Duplicate } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport { ContentBox } from '../../../../../components/ContentBox';\nimport { useNotification } from '../../../../../features/Notifications';\nimport { useClipboard } from '../../../../../hooks/useClipboard';\n\ninterface MagicLinkWrapperProps {\n  children: string;\n  target: string;\n}\n\nconst MagicLinkWrapper = ({ children, target }: MagicLinkWrapperProps) => {\n  const { toggleNotification } = useNotification();\n  const { formatMessage } = useIntl();\n  const { copy } = useClipboard();\n\n  const copyLabel = formatMessage({\n    id: 'app.component.CopyToClipboard.label',\n    defaultMessage: 'Copy to clipboard',\n  });\n\n  const handleClick = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    const didCopy = await copy(target);\n\n    if (didCopy) {\n      toggleNotification({\n        type: 'info',\n        message: formatMessage({ id: 'notification.link-copied' }),\n      });\n    }\n  };\n\n  return (\n    <ContentBox\n      endAction={\n        <IconButton label={copyLabel} variant=\"ghost\" onClick={handleClick}>\n          <Duplicate />\n        </IconButton>\n      }\n      title={target}\n      titleEllipsis\n      subtitle={children}\n      icon={<span style={{ fontSize: 32 }}>✉️</span>}\n      iconBackground=\"neutral100\"\n    />\n  );\n};\n\nexport { MagicLinkWrapper };\nexport type { MagicLinkWrapperProps };\n","import { useIntl } from 'react-intl';\n\nimport { getBasename } from '../../../../../core/utils/basename';\n\nimport { MagicLinkWrapper } from './MagicLinkWrapper';\n\ninterface MagicLinkCEProps {\n  registrationToken: string;\n}\n\nconst MagicLinkCE = ({ registrationToken }: MagicLinkCEProps) => {\n  const { formatMessage } = useIntl();\n  const target = `${\n    window.location.origin\n  }${getBasename()}/auth/register?registrationToken=${registrationToken}`;\n\n  return (\n    <MagicLinkWrapper target={target}>\n      {formatMessage({\n        id: 'app.components.Users.MagicLink.connect',\n        defaultMessage: 'Copy and share this link to give access to this user',\n      })}\n    </MagicLinkWrapper>\n  );\n};\n\nexport { MagicLinkCE };\nexport type { MagicLinkCEProps };\n","import { Field, MultiSelect, MultiSelectOption } from '@strapi/design-system';\nimport { Loader as LoadingIcon } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { styled, keyframes } from 'styled-components';\n\nimport { useField } from '../../../../../components/Form';\nimport { useAdminRoles } from '../../../../../hooks/useAdminRoles';\n\ninterface SelectRolesProps {\n  disabled?: boolean;\n}\n\nconst SelectRoles = ({ disabled }: SelectRolesProps) => {\n  const { isLoading, roles } = useAdminRoles();\n\n  const { formatMessage } = useIntl();\n  const { value = [], onChange, error } = useField<string[]>('roles');\n\n  return (\n    <Field.Root\n      error={error}\n      hint={formatMessage({\n        id: 'app.components.Users.ModalCreateBody.block-title.roles.description',\n        defaultMessage: 'A user can have one or several roles',\n      })}\n      name=\"roles\"\n      required\n    >\n      <Field.Label>\n        {formatMessage({\n          id: 'app.components.Users.ModalCreateBody.block-title.roles',\n          defaultMessage: \"User's roles\",\n        })}\n      </Field.Label>\n      <MultiSelect\n        disabled={disabled}\n        onChange={(v) => {\n          onChange('roles', v);\n        }}\n        placeholder={formatMessage({\n          id: 'app.components.Select.placeholder',\n          defaultMessage: 'Select',\n        })}\n        startIcon={isLoading ? <Loader /> : undefined}\n        value={value.map((v) => v.toString())}\n        withTags\n      >\n        {roles.map((role) => {\n          return (\n            <MultiSelectOption key={role.id} value={role.id.toString()}>\n              {formatMessage({\n                id: `global.${role.code}`,\n                defaultMessage: role.name,\n              })}\n            </MultiSelectOption>\n          );\n        })}\n      </MultiSelect>\n      <Field.Error />\n      <Field.Hint />\n    </Field.Root>\n  );\n};\n\nconst rotation = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(359deg);\n  }\n`;\n\nconst LoadingWrapper = styled.div`\n  animation: ${rotation} 2s infinite linear;\n`;\n\nconst Loader = () => (\n  <LoadingWrapper>\n    <LoadingIcon />\n  </LoadingWrapper>\n);\n\nexport { SelectRoles };\n"],"names":["MagicLinkWrapper","children","target","toggleNotification","useNotification","formatMessage","useIntl","copy","useClipboard","copyLabel","id","defaultMessage","handleClick","e","preventDefault","didCopy","type","message","_jsx","ContentBox","endAction","IconButton","label","variant","onClick","Duplicate","title","titleEllipsis","subtitle","icon","span","style","fontSize","iconBackground","MagicLinkCE","registrationToken","window","location","origin","getBasename","SelectRoles","disabled","isLoading","roles","useAdminRoles","value","onChange","error","useField","_jsxs","Field","Root","hint","name","required","Label","MultiSelect","v","placeholder","startIcon","Loader","undefined","map","toString","withTags","role","MultiSelectOption","code","Error","Hint","rotation","keyframes","LoadingWrapper","styled","div","LoadingIcon"],"mappings":";;;;;;;;;AAaA,MAAMA,mBAAmB,CAAC,EAAEC,QAAQ,EAAEC,MAAM,EAAyB,GAAA;IACnE,MAAM,EAAEC,kBAAkB,EAAE,GAAGC,eAAAA,EAAAA;IAC/B,MAAM,EAAEC,aAAa,EAAE,GAAGC,OAAAA,EAAAA;IAC1B,MAAM,EAAEC,IAAI,EAAE,GAAGC,YAAAA,EAAAA;AAEjB,IAAA,MAAMC,YAAYJ,aAAc,CAAA;QAC9BK,EAAI,EAAA,qCAAA;QACJC,cAAgB,EAAA;AAClB,KAAA,CAAA;AAEA,IAAA,MAAMC,cAAc,OAAOC,CAAAA,GAAAA;AACzBA,QAAAA,CAAAA,CAAEC,cAAc,EAAA;QAEhB,MAAMC,OAAAA,GAAU,MAAMR,IAAKL,CAAAA,MAAAA,CAAAA;AAE3B,QAAA,IAAIa,OAAS,EAAA;YACXZ,kBAAmB,CAAA;gBACjBa,IAAM,EAAA,MAAA;AACNC,gBAAAA,OAAAA,EAASZ,aAAc,CAAA;oBAAEK,EAAI,EAAA;AAA2B,iBAAA;AAC1D,aAAA,CAAA;AACF;AACF,KAAA;AAEA,IAAA,qBACEQ,GAACC,CAAAA,UAAAA,EAAAA;AACCC,QAAAA,SAAAA,gBACEF,GAACG,CAAAA,UAAAA,EAAAA;YAAWC,KAAOb,EAAAA,SAAAA;YAAWc,OAAQ,EAAA,OAAA;YAAQC,OAASZ,EAAAA,WAAAA;AACrD,YAAA,QAAA,gBAAAM,GAACO,CAAAA,SAAAA,EAAAA,EAAAA;;QAGLC,KAAOxB,EAAAA,MAAAA;QACPyB,aAAa,EAAA,IAAA;QACbC,QAAU3B,EAAAA,QAAAA;AACV4B,QAAAA,IAAAA,gBAAMX,GAACY,CAAAA,MAAAA,EAAAA;YAAKC,KAAO,EAAA;gBAAEC,QAAU,EAAA;AAAG,aAAA;AAAG,YAAA,QAAA,EAAA;;QACrCC,cAAe,EAAA;;AAGrB;;ACxCA,MAAMC,WAAc,GAAA,CAAC,EAAEC,iBAAiB,EAAoB,GAAA;IAC1D,MAAM,EAAE9B,aAAa,EAAE,GAAGC,OAAAA,EAAAA;AAC1B,IAAA,MAAMJ,MAAS,GAAA,CAAC,EACdkC,MAAAA,CAAOC,QAAQ,CAACC,MAAM,CACvB,EAAEC,WAAAA,EAAAA,CAAc,iCAAiC,EAAEJ,kBAAkB,CAAC;AAEvE,IAAA,qBACEjB,GAAClB,CAAAA,gBAAAA,EAAAA;QAAiBE,MAAQA,EAAAA,MAAAA;kBACvBG,aAAc,CAAA;YACbK,EAAI,EAAA,wCAAA;YACJC,cAAgB,EAAA;AAClB,SAAA;;AAGN;;ACZA,MAAM6B,WAAc,GAAA,CAAC,EAAEC,QAAQ,EAAoB,GAAA;AACjD,IAAA,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAE,GAAGC,aAAAA,EAAAA;IAE7B,MAAM,EAAEvC,aAAa,EAAE,GAAGC,OAAAA,EAAAA;IAC1B,MAAM,EAAEuC,QAAQ,EAAE,EAAEC,QAAQ,EAAEC,KAAK,EAAE,GAAGC,QAAmB,CAAA,OAAA,CAAA;IAE3D,qBACEC,IAAA,CAACC,MAAMC,IAAI,EAAA;QACTJ,KAAOA,EAAAA,KAAAA;AACPK,QAAAA,IAAAA,EAAM/C,aAAc,CAAA;YAClBK,EAAI,EAAA,oEAAA;YACJC,cAAgB,EAAA;AAClB,SAAA,CAAA;QACA0C,IAAK,EAAA,OAAA;QACLC,QAAQ,EAAA,IAAA;;AAER,0BAAApC,GAAA,CAACgC,MAAMK,KAAK,EAAA;0BACTlD,aAAc,CAAA;oBACbK,EAAI,EAAA,wDAAA;oBACJC,cAAgB,EAAA;AAClB,iBAAA;;0BAEFO,GAACsC,CAAAA,WAAAA,EAAAA;gBACCf,QAAUA,EAAAA,QAAAA;AACVK,gBAAAA,QAAAA,EAAU,CAACW,CAAAA,GAAAA;AACTX,oBAAAA,QAAAA,CAAS,OAASW,EAAAA,CAAAA,CAAAA;AACpB,iBAAA;AACAC,gBAAAA,WAAAA,EAAarD,aAAc,CAAA;oBACzBK,EAAI,EAAA,mCAAA;oBACJC,cAAgB,EAAA;AAClB,iBAAA,CAAA;gBACAgD,SAAWjB,EAAAA,SAAAA,iBAAYxB,IAAC0C,MAAYC,EAAAA,EAAAA,CAAAA,GAAAA,SAAAA;AACpChB,gBAAAA,KAAAA,EAAOA,MAAMiB,GAAG,CAAC,CAACL,CAAAA,GAAMA,EAAEM,QAAQ,EAAA,CAAA;gBAClCC,QAAQ,EAAA,IAAA;0BAEPrB,KAAMmB,CAAAA,GAAG,CAAC,CAACG,IAAAA,GAAAA;AACV,oBAAA,qBACE/C,GAACgD,CAAAA,iBAAAA,EAAAA;wBAAgCrB,KAAOoB,EAAAA,IAAAA,CAAKvD,EAAE,CAACqD,QAAQ,EAAA;kCACrD1D,aAAc,CAAA;AACbK,4BAAAA,EAAAA,EAAI,CAAC,OAAO,EAAEuD,IAAKE,CAAAA,IAAI,CAAC,CAAC;AACzBxD,4BAAAA,cAAAA,EAAgBsD,KAAKZ;AACvB,yBAAA;AAJsBY,qBAAAA,EAAAA,IAAAA,CAAKvD,EAAE,CAAA;AAOnC,iBAAA;;AAEF,0BAAAQ,GAAA,CAACgC,MAAMkB,KAAK,EAAA,EAAA,CAAA;AACZ,0BAAAlD,GAAA,CAACgC,MAAMmB,IAAI,EAAA,EAAA;;;AAGjB;AAEA,MAAMC,QAAAA,GAAWC,SAAS;;;;;;;AAO1B,CAAC;AAED,MAAMC,cAAAA,GAAiBC,MAAOC,CAAAA,GAAG;AACpB,aAAA,EAAEJ,QAAS,CAAA;AACxB,CAAC;AAED,MAAMV,MAAAA,GAAS,kBACb1C,GAACsD,CAAAA,cAAAA,EAAAA;AACC,QAAA,QAAA,gBAAAtD,GAACyD,CAAAA,QAAAA,EAAAA,EAAAA;;;;;"}