import { jsxs, jsx, Fragment } from 'react/jsx-runtime';
import { a as Events } from './EditPage-B9p0M-_e.mjs';
import 'react';
import '@strapi/design-system';
import 'react-intl';
import 'react-router-dom';
import './Theme-C3oHrQcy.mjs';
import '@radix-ui/react-context';
import '@strapi/icons';
import '@strapi/icons/symbols';
import 'qs';
import './admin-BBS7sDVu.mjs';
import 'lodash/trimEnd';
import '@reduxjs/toolkit/query/react';
import 'lodash/fp/pipe';
import 'lodash/clone';
import 'lodash/toPath';
import 'lodash/isEqual';
import 'axios';
import 'immer';
import 'lodash/get';
import 'lodash/set';
import 'use-context-selector';
import 'lodash/defaultsDeep';
import 'react-redux';
import 'styled-components';
import '@reduxjs/toolkit';
import './selectors-Dej_6h4x.mjs';
import 'yup';
import './index-GvH7eseL.mjs';
import 'react-dom/client';
import 'invariant';
import 'lodash/isFunction';
import 'lodash/merge';
import 'lodash/pick';
import 'react-query';
import './useEnterprise-Dy8wMNV5.mjs';
import 'lodash/camelCase';
import 'fractional-indexing';
import 'lodash/omit';
import 'formik';
import 'lodash/throttle';
import './useWebhooks-DzJ3X-hd.mjs';

const eeTables = {
    'review-workflows': {
        'review-workflows': [
            'review-workflows.updateEntryStage'
        ]
    },
    releases: {
        releases: [
            'releases.publish'
        ]
    }
};
const getHeaders = (table)=>{
    switch(table){
        case 'review-workflows':
            return ()=>[
                    {
                        id: 'review-workflows.updateEntryStage',
                        defaultMessage: 'Stage Change'
                    }
                ];
        case 'releases':
            return ()=>[
                    {
                        id: 'releases.publish',
                        defaultMessage: 'Publish'
                    }
                ];
    }
};
const EventsTableEE = ()=>{
    return /*#__PURE__*/ jsxs(Events.Root, {
        children: [
            /*#__PURE__*/ jsx(Events.Headers, {}),
            /*#__PURE__*/ jsx(Events.Body, {}),
            Object.keys(eeTables).map((table)=>/*#__PURE__*/ jsxs(Fragment, {
                    children: [
                        /*#__PURE__*/ jsx(Events.Headers, {
                            getHeaders: getHeaders(table)
                        }),
                        /*#__PURE__*/ jsx(Events.Body, {
                            providedEvents: eeTables[table]
                        })
                    ]
                }))
        ]
    });
};

export { EventsTableEE };
//# sourceMappingURL=EventsTable-ClYIV-FM.mjs.map
