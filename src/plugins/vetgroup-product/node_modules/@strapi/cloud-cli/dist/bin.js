'use strict';

var commander = require('commander');
require('axios');
require('fs-extra');
require('os');
var index = require('./chunks/index-CUWnF77x.js');
require('path');
require('xdg-app-paths');
require('lodash');
require('jwks-rsa');
require('jsonwebtoken');
require('crypto');
require('inquirer');
require('boxen');
require('chalk');
require('node:crypto');
require('@strapi/utils');
require('tar');
require('minimatch');
require('lodash/fp');
require('fast-safe-stringify');
require('ora');
require('cli-progress');
require('pkg-up');
require('yup');
require('eventsource');

function loadStrapiCloudCommand(argv = process.argv, command = new commander.Command()) {
    // Initial program setup
    command.storeOptionsAsProperties(false).allowUnknownOption(true);
    // Help command
    command.helpOption('-h, --help', 'Display help for command');
    command.addHelpCommand('help [command]', 'Display help for command');
    const cwd = process.cwd();
    const hasDebug = argv.includes('--debug');
    const hasSilent = argv.includes('--silent');
    const logger = index.createLogger({
        debug: hasDebug,
        silent: hasSilent,
        timestamp: false
    });
    const ctx = {
        cwd,
        logger
    };
    index.buildStrapiCloudCommands({
        command,
        ctx,
        argv
    });
}
function runStrapiCloudCommand(argv = process.argv, command = new commander.Command()) {
    loadStrapiCloudCommand(argv, command);
    command.parse(argv);
}

exports.runStrapiCloudCommand = runStrapiCloudCommand;
//# sourceMappingURL=bin.js.map
